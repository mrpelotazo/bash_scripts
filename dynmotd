#!/bin/bash

#######################################################################################################
# Name        : dynmotd
#
# Description : This script shows a nice message on login showing some system info.
#               In order to work this script has to be sourced in your /etc/profile file
#               for work for all users or in the user ~/.profile it should work with.
#              
# Colors      : This script uses color definitions from the /etc/colorsdef file. This file
#               contains a bunch of variables with the color escape sequences to get colored
#               text on the terminal.
#               If you don't have such file take a look at following article from the Arch Linux wiki:
#
#               https://wiki.archlinux.org/index.php/Color_Bash_Prompt#List_of_colors_for_prompt_and_Bash
#
#               There is a straight forward example on how to get such a color definitions file.
#
# OS          : To get the OS name, codename, release... I'm using the lsb_release command. You will
#               have to install that package if you want the OS info to be shown.
#
# Network     : Interface information depends on the interface defined in the IFACE variable, please
#               adjust its value to your system configuration.
#
# Banner      : /etc/banner is intended to be a text file with static information to be displayed as
#               a header.
#               In my case a hace a nice ASCII art version of my hostname generated by the ASCII generator
#               on following web page:
#
#               http://www.network-science.de/ascii/
#
# NOTE        : Some things like ifconfig show not exactly the same output on different Linux systems.
#               Here I'm asuming to find some strings with a certain format to get the right info out
#               of them. You might need to make some little modifications to the script to make it
#               work properly in your particular system.
#
# Author      : Adrian Antonana <a.antonana@gmail.com>
#
# Date        : 12.08.2013
#######################################################################################################



#source color definitions
source /etc/colorsdef

#get information
BANNER="/etc/banner"
HOSTNAME=$(hostname)
OS=$(lsb_release -d | awk -F':' '{print $2}' | sed 's/\t//g')
IFACE="br0"
IP=$(/sbin/ifconfig $IFACE | grep "inet addr" | awk '{print $2}' | sed 's/addr://')
BCAST=$(/sbin/ifconfig $IFACE | grep "inet addr" | awk '{print $3}' | sed 's/Bcast://')
MASK=$(/sbin/ifconfig $IFACE | grep "inet addr" | awk '{print $4}' | sed 's/Mask://')
DNS1=$(cat /etc/resolv.conf | grep nameserver | sed -n 1p | awk '{print $2}')
DNS2=$(cat /etc/resolv.conf | grep nameserver | sed -n 2p | awk '{print $2}')
CPU=$(cat /proc/cpuinfo | grep "model name" | head -1 | awk -F  ":" '{print $2}')
ARCH=$(uname -m)
KERNEL=$(uname -r)
MEM=$(cat /proc/meminfo | grep MemTotal | awk {'print $2'})

UPTIME=$(</proc/uptime)
UPTIME=${UPTIME%%.*}
SECONDS=$(( UPTIME%60 ))
MINUTES=$(( UPTIME/60%60 ))
HOURS=$(( UPTIME/60/60%24 ))
DAYS=$(( UPTIME/60/60/24 ))

USER_NAME=$(id -un)
UID_NUM=$(id -u)
DEF_GROUP=$(id -gn)
GID_NUM=$(id -g)
OTHER_GROUPS=$(id -Gn | sed "s/$USER //")
SESSIONS=$(who | grep $USER | wc -l)

#print banner if it exists
if [ -e $BANNER ]; then
	echo -ne $RED
	cat $BANNER
	echo -ne $COLOR_OFF
fi

#print information
echo -e "
${PURPLE}+++++++++++++++++++++++++++: ${COLOR_OFF}System Data ${PURPLE}:++++++++++++++++++++++++++++++${COLOR_OFF}
Hostname         : ${GREEN}${HOSTNAME}${COLOR_OFF}
OS               : ${GREEN}${OS}${COLOR_OFF}
Kernel           : ${GREEN}${KERNEL}${COLOR_OFF}
Arch             : ${GREEN}${ARCH}${COLOR_OFF}
CPU              :${GREEN}${CPU}${COLOR_OFF}
Memory           : ${GREEN}${MEM} kB${COLOR_OFF}
Uptime           : ${GREEN}${DAYS} days, $HOURS hours, $MINUTES minutes, $SECONDS seconds${COLOR_OFF}
${PURPLE}++++++++++++++++++++++++++++:  ${COLOR_OFF}Network   ${PURPLE}:++++++++++++++++++++++++++++++${COLOR_OFF}
Interface        : ${GREEN}${IFACE}${COLOR_OFF}
IP               : ${GREEN}${IP}${COLOR_OFF}
Bcast            : ${GREEN}${BCAST}${COLOR_OFF}
Mask             : ${GREEN}${MASK}${COLOR_OFF}
DNS primary      : ${GREEN}${DNS1}${COLOR_OFF}"
[[ ! -z $DNS2 ]] &&	echo -e "DNS secondary    : ${GREEN}${DNS2}${COLOR_OFF}"
echo -e "${PURPLE}++++++++++++++++++++++++++++: ${COLOR_OFF}User Data  ${PURPLE}:++++++++++++++++++++++++++++++${COLOR_OFF}
User (UID)       : ${GREEN}${USER_NAME} (${UID_NUM})${COLOR_OFF}
Def. Group (GID) : ${GREEN}${DEF_GROUP} (${GID_NUM})${COLOR_OFF}
Other Groups     : ${GREEN}${OTHER_GROUPS}${COLOR_OFF}
Sessions         : ${GREEN}${SESSIONS}${COLOR_OFF}
"
